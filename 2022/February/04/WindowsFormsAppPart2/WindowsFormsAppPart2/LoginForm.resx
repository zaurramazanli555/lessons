<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>